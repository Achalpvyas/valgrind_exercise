==10630== Memcheck, a memory error detector
==10630== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==10630== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==10630== Command: ./build/app/shell-app
==10630== 
Averaged sensor reading: 10
==10630== Conditional jump or move depends on uninitialised value(s)
==10630==    at 0x401DC7: main (main.cpp:9)
==10630==  Uninitialised value was created by a stack allocation
==10630==    at 0x401D66: main (main.cpp:5)
==10630== 
==10630== 
==10630== HEAP SUMMARY:
==10630==     in use at exit: 72,748 bytes in 3 blocks
==10630==   total heap usage: 4 allocs, 1 frees, 76,844 bytes allocated
==10630== 
==10630== 20 bytes in 1 blocks are indirectly lost in loss record 1 of 3
==10630==    at 0x4C2E0EF: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10630==    by 0x40265B: __gnu_cxx::new_allocator<int>::allocate(unsigned long, void const*) (new_allocator.h:104)
==10630==    by 0x4025C8: std::allocator_traits<std::allocator<int> >::allocate(std::allocator<int>&, unsigned long) (alloc_traits.h:491)
==10630==    by 0x402529: std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long) (stl_vector.h:170)
==10630==    by 0x40241E: std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long) (stl_vector.h:185)
==10630==    by 0x40226A: std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long, std::allocator<int> const&) (stl_vector.h:136)
==10630==    by 0x4020A1: std::vector<int, std::allocator<int> >::vector(unsigned long, int const&, std::allocator<int> const&) (stl_vector.h:291)
==10630==    by 0x401F06: AnalogSensor::Read() (AnalogSensor.cpp:16)
==10630==    by 0x401D9A: main (main.cpp:7)
==10630== 
==10630== 44 (24 direct, 20 indirect) bytes in 1 blocks are definitely lost in loss record 2 of 3
==10630==    at 0x4C2E0EF: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10630==    by 0x401EEA: AnalogSensor::Read() (AnalogSensor.cpp:16)
==10630==    by 0x401D9A: main (main.cpp:7)
==10630== 
==10630== 72,704 bytes in 1 blocks are still reachable in loss record 3 of 3
==10630==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==10630==    by 0x4EC3EFF: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==10630==    by 0x40106C9: call_init.part.0 (dl-init.c:72)
==10630==    by 0x40107DA: call_init (dl-init.c:30)
==10630==    by 0x40107DA: _dl_init (dl-init.c:120)
==10630==    by 0x4000C69: ??? (in /lib/x86_64-linux-gnu/ld-2.23.so)
==10630== 
==10630== LEAK SUMMARY:
==10630==    definitely lost: 24 bytes in 1 blocks
==10630==    indirectly lost: 20 bytes in 1 blocks
==10630==      possibly lost: 0 bytes in 0 blocks
==10630==    still reachable: 72,704 bytes in 1 blocks
==10630==         suppressed: 0 bytes in 0 blocks
==10630== 
==10630== For counts of detected and suppressed errors, rerun with: -v
==10630== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
